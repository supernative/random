
<1722111449.6714294>
seems to be working, so i shall continue to thread in parallel ~
something was relav*inception of the process ~
but i gotta collect my thoughts ~
hold up ~
<1722111518.5505276>
<1722111660.116029>
remembered: microphone and its recording process ~
i like the procedure involved in getting a condenser mic to be used for  recording air! ~
it wouldn't do it unless some power is given to it ~
it makes sense since it cannot provide that on its own ~
let's consider this the knowledge (this being power that we provide) ~
the audio interface will provide it with phantom power whenever it requires energy that 48 volts of supply could produce ~
this energy will power the mechanical components inside the microphone ~
when those parts are active, there could be reception possible ~
it doesn't have any channel for that information to travel except for the channel that it is wired to at the interface space ~
interface will know when its supplied power and internal state of channel processor is changed ~
those changed quantities correspond to something being produced ~
that may be the kinetic energy coming off the microphone substrate ~
for that substrate to function, this device (interface) has a potential energy measure ~
but the interface itself is powered through usb connection which comes from the computer running on electricity ~
as it has continuous current supplied to its processors, the interface will get its required energy if it can reach over to the computing env via  usb ~
so there is another energy function ~
this one mediates interaction between the computing environment and the audio interface provider substrate ~
that substrate will have solved for the energy quantity locally for a possible observables at its characteristic programs' state ~
that state would be solved for the  conserved quantities that define relation between the usb interface and audio interface medium ~
finally, the quantities will have digital encoding that will be mediated via storage substrates and processing subsystems  ~
notice that i am using substrate and subsystem interchangably but it may not be that maliable always ~
it is f ~
*it is in the case of storage mod*modules and processing modules that must work together in encoding /decoding phases ~
they are dealing with information and computation variables via a medium that must share at least one of the computation variables with the information processing substrates ~
only that relation could possibly enable encoding/decoding of coherent and reliable kind in nature ~
<1722112644.2625368>
<1722121110.464252>
started thinking about neutrinos ~
went to feynman diag ~
now something emcompassing ~
hold up ~
<1722121169.7278845>
<1722124633.391393>
continues .. ~
stereo -> mid, side ~
mid, side -> mono ~
mono -> left, right ~
left, right -> stereo ~
arrow means something variable hwere! ~
<1722124718.708377>
<1722130223.4069936>
consider e to be an array where e[+] : positively charged variables and e[-] : negatively charged variables. ~
e defines a channel then, whose two opposing poles are accessible via adjusting the pan pot position. ~
for pan pot to range within interval of (-270, +90), let's assume the north side up to be 0 degree. ~
when a mass sits at the center of the channels' attention, it is facing north with 0.5 probability. ~
probability of 1 corresponds to the pan pot position being held at the 90'th mark, similarly for 270'th mark where the pot activates with 0 probability. ~
the volume could be lowered where the channel feeds forward with its current state where the relative position at master defines the output observables. ~
each output state has two levels <- stereo type. ~
 ~
while the fader adjusts relative state contribution of a channel, it is an extrinsic feature of the system (master + slaves[i]) where i is the channel in effect. ~
while extrinsic attributes change, the intrinsic attributes are depended on the channel state which transforms some input sent to it via linear path to bi-linear path feeding back to the substrate. ~
this feeding back does not occur explicitly in terms of what connecting lines feed into the channel, but rather via measurement that it does on the relative state contribution achieved through its transformed line accumulated at master. ~
master may consider several other paths and adjust external parameters activating the potential cummulative effect from the bus. ~
 ~
explain the following: ~
>>> e[-] + e[+] -> gamma + gamma ~
 ~
e[+] is the particle of anti-matter. ~
 ~
does it not look like the following: ~
>>> left + right -> mid + mid ~
>>> left - right -> side + side ~
 ~
side[+] is the east-west direction ~
side[-] is the west-east direction ~
 ~
but this assumes the mid[+] to be north-south. ~
 ~
when mid[-] is north-south, sides say the exact opposite. ~
but that mid position have its reflection symmetry always matching the other mids' intrinsic notion of symmetry. ~
consider e to be an array where e[+] : positively charged variables and e[-] : negatively charged variables. ~
e defines a channel then, whose two opposing poles are accessible via adjusting the pan pot position. ~
for pan pot to range within interval of (-270, +90), let's assume the north side up to be 0 degree. ~
when a mass sits at the center of the channels' attention, it is facing north with 0.5 probability. ~
probability of 1 corresponds to the pan pot position being held at the 90'th mark, similarly for 270'th mark where the pot activates with 0 probability. ~
the volume could be lowered where the channel feeds forward with its current state where the relative position at master defines the output observables. ~
each output state has two levels <- stereo type. ~
 ~
while the fader adjusts relative state contribution of a channel, it is an extrinsic feature of the system (master + slaves[i]) where i is the channel in effect. ~
while extrinsic attributes change, the intrinsic attributes are depended on the channel state which transforms some input sent to it via linear path to bi-linear path feeding back to the substrate. ~
this feeding back does not occur explicitly in terms of what connecting lines feed into the channel, but rather via measurement that it does on the relative state contribution achieved through its transformed line accumulated at master. ~
master may consider several other paths and adjust external parameters activating the potential cummulative effect from the bus. ~
 ~
explain the following: ~
>>> e[-] + e[+] -> gamma + gamma ~
 ~
e[+] is the particle of anti-matter. ~
 ~
does it not look like the following: ~
>>> left + right -> mid + mid ~
>>> left - right -> side + side ~
 ~
side[+] is the east-west direction ~
side[-] is the west-east direction ~
 ~
but this assumes the mid[+] to be north-south. ~
 ~
when mid[-] is north-south, sides say the exact opposite. ~
but that mid position have its reflection symmetry always matching the other mids' intrinsic notion of symmetry. ~
 ~
<1722130241.940729>
<1722144688.207112>
obviously you can't count things with quantum observables. ~
isn't that surprising? ~
no it's not! ~
what do you want to do that for and who the fuck do you think you are speaking with • ~
here I forbid your measurement bucko! ~
.. collapse of wave function (science says) ~
 ~
i don't like the mode. ~
.. transistorized computers i mean. ~
 ~
how is it possible to get completely outside of something that is a field of its own where I can have entangled states. ~
as I am in it, I apparantly can visit other fields and nothing commutes with me/  ~
somehow these discrete batches of attractors can pull me in while my bits travel from one place to the other. ~
 ~
anyhow, it must go. ~
 ~
i need a multitrack and only two level system. ~
like a stereo speaker that could play a huge stack paralleled over coherent two levels. ~
it also remain coherent all the way until we place the new record which again manages. ~
 ~
everything I do now and everything I could do with the current environment could be entirely ported over to stereo-multitrack environment. ~
first I have to prove that fact via equivalency tests. ~
these tests will sign off on the contract completely, if passed. ~
 ~
mimic that: ~
>>> read file called A ~
>>> look for segments called B ~
>>> if B is found, read file C ~
>>> if C is possible, look for segment called D ~
>>> if D is found, quit ~
>>> if C is impossible, quit ~
>>> write file called C ~
>>> include segment called B ~
>>> include nothing if segment B is impossible ~
>>> quit out ~
 ~
create three channels of stereo type. ~
label channels as Aa, Bb, Cc. ~
load data X to A with and -X to B. ~
read A + B into a and write a * B to b. ~
render AB as Z and load data Z to cC. ~
read B + C into b and write b * C to a. ~
.. ~
permute, store, replace and merge like so until final image. ~
 ~
let's talk about memory! ~
 ~
import memory_manager ~
 ~
# Create a memory manager ~
manager = memory_manager.create_manager() ~
 ~
# Allocate memory ~
memory_manager.allocate_memory(manager, 10) ~
 ~
# Set memory ~
memory_manager.set_memory(manager, [i for i in range(10)]) ~
 ~
# Get and print memory ~
print(memory_manager.get_memory(manager)) ~
 ~
# Destroy the memory manager ~
memory_manager.destroy_manager(manager) ~
 ~
this memory manager contains all source required for low level operations. ~
 ~
• we need to build a C extension too. ~
 ~
from setuptools import setup, Extension ~
 ~
setup( ~
    name='memory_manager', ~
    version='1.0', ~
    ext_modules=[Extension('memory_manager', sources=['memory_manager.c'])], ~
) ~
 ~
• now let's dive into the memory_manager.c aspects. ~
.. include python header <Python.h> and standard lib ~
.. define a structure for managing the state ~
typedef struct { ~
    int *data; // pointer to the integer valued data field ~
    size_t size; // size indicator as attribute ~
} MemoryManager; // establish namespace ~
 ~
.. create a static type for python object state called create_manager ~
 ~
static PyObject* create_manager(PyObject* self, PyObject* args) { ~
    MemoryManager* manager = (MemoryManager*) malloc(sizeof(MemoryManager)); ~
    if (manager == NULL) { ~
        set stringed message showing error case! ~
        return NULL; ~
    }; ~
    manager -> data = NULL; ~
    manager -> size = 0; ~
    return something called pycapsule that will use the manager field to construct an object called "MemoryManager" ~
} ~
 ~
 ~
bunch of other stuff that uses like statements .. i feel boring! ~
 ~
let's quit here. ~
<1722144703.2642982>
<1722144870.1939905>
coming back to mainstream now ~
i shall compose my thoughts first ~
hd ~
*hold up ~
<1722144909.397827>
<1722145711.6413743>
here is come from the jamming that i have been doing with my logic gates ~
seriously! ~
let's talk about mono compatibility for serious mow ~
*now ~
suppose there is a state and mode of description only available from perfect mono image ~
it says something about possible companions ~
what kinds of stereo-typing can be done now? ~
something to think here! ~
c ~
brb ~
<1722145878.9180212>
<1722165650.3760812>
this will be exact description ~
code will not be included ~
steps could be interpreted generically ~
product code can be tested deterministically ~
starting now! ~
the process of using electronic computers for anything involves these fundamental operations that must be managed in order to successfully carry out any information processing task. ~
(1) locating the user and its' interfacing criteria ~
(2) bringing all supporting tools o the scope of interaction before proceeding ~
(3) keep two parallel running processing stand-by with respect to some indication of the stepping event ~
(4) keeping statistics for every step in order to error correct at higher levels ~
(5) classifying the program required to carry out job and ordering them to be prepared into memory ~
(6) using the programs loaded in memory to reach agreements ~
(7) only increment step counter if and only if the resolution is clear ~
(8) once stepped, analyzing the latency and digging into their causes ~
(9) learning additional networks to optimize the latency cost ~
checking with record server from time to time in order to bring the system description to the current level ~
(10) finally, ensuring push to remote repository and storage servers all the bone data and source related files. ~
exact planning of heuristics will be given next ~
hold up ~
<1722166153.2015896>
<1722166836.2180223>
<1722166876.9764154>
watchmaker burries something deep within his thoughts ~
<1722166902.3087606>
<1722166903.8898435>
use torch module to write a model ~
this model will have forward function processing input state to output state ~
another method called optimize ~
it will take some arbitrary present state and a minimum loss value possible ~
it will then use a criterion with new forwared states and the assigned current state along with the floor for miminum loss and train its outputs for all subsequent inputs until that loss is minimized to the given level ~
the self-correction will take place automatically once an indication of the currently expected state is prpovided along with the critical loss that would be acceptable. ~
it will not ever move away from the assigned levels and any time there is a measure possible, it will optimize automatically  ~
provide the last state with ev* newly computed state from forward calls ~
. ~
<1722167314.5397742>
<1722169397.4456024>
<1722201479.3315494>
what is required of these: ~
(1) use indata/outdata for sampling/generating ~
(2) frames/status for sequencing/activation ~
(3) status/time for activation/tangent ~
so that a stream could be ran on independent paths ~
path1: user-agent interface ~
path2: agent-user interface ~
just like a two channel stereo system that could connect two microphones together, i want to use two models of microphone device that each simulate the mechanical aspects ~
through that we could enable pure physics based optimization ~
generators would now deal with causal patterns of continuous waves ~
nus ~
just as transformer or rnn would take an input sequence and generate completion, consider their input sequences to be indata to which they would produce outdata ~
when the two is ran in parallel that is continuous through some continuous block of time before resetting the gradients ~
-- prompt-completion in turns will together produce the microphone signnal that would have been produced if two speakers were in recording booth making a podcast ~
<1722202750.4409108>
<1722226330.492796>
i want to discuss the universal turing machines ~
especially what makes them universal and why is that discovery is v*untypical of physical laws ~
a single machine could be programmmed to mimic any machine ~
computing being mostly a counting game, it asserts that any machine of these kind can match the counting game being played by any other machine arbitrarily accurately ~
it is only constrained by the toime  it would require and memory that needs to be managed. ~
if physical motion corresponds to physical changes in state of anything  in the universe, then these machines can in principle carry out all such movements via its programming language ~
so it is capable of representing the motion of anything hence universal ~
but the possibility of ever actually achieving any such universality property would depend on how the programs that would instruct the machine is going to bring about the necessary changes m ~
it would not be capable of anything of value via only the feature of yniversal reach ~
next i need to explore the universal constructor ~
breaj ~
<1722227010.4296806>
<1722227017.7546628>
a universal construct could be the precursor that would be required to sxplain the universal property of a turing type machine ~
because of the emergent laws that those physical objects apparantly allow almost generically ~
but the computing machine is only emergent and none of its emergent properties can be established in absense  of the theory of computation that expects such regularity in nature to be so that a machine could be built out of physical objects that would enBle computation of any kind what so eve ~
however computational universality  is not the only physical universality there exists ~
there cannot be such a base level as something that brings about an exclusively emergent level of description using physical regularities can only do so if a meta law that governs the construction ability of the machinee  could be available as regular property of something that must exist in nature generically ~
definetely it cannot refer to computers if it could be built and those descriptors are universal themselves ~
*themselve ~
<1722227749.1959014>
<1722232439.8578863>
defining concretely (stereo, mono) ~
mid-side matrix is a thing that translates between left-right and mid-si ~
*mid-side m ~
an active MS matrix will use two pairs of buffers, some terminals, adde, inverter only m ~
either left or mid arrives at the buffer[0] which connects to the positive terminal of the device ~
from terminal endpoint, the signal travels down to the adder module ~
adder connects to the sink buffer in two possible ways (straight thru to positive, side injection accumlated via negative terminal connection ~
the final output is either mid or *left ~
i have misspoke ~
never mind the circuitry details ~
i am not an electrical guy, although i would have loved to be  ~
basically it turns left-right inputs to produce mid-side output or mid-sides input to transform left-right outputs ~
there are some isolating techniques going on as these are parallel constructors ~
more on those later ~
<1722233630.3543015>
<1722310121.9755614>
Task: Design session with observers and resonators that keeps temperature to threshold set ~
I want observers to be different programs, each having a session of theheir own ~
Resonators are programs that neweds to stay local to the current session ~
Note: If observers are not all excusively to the current context windk*window ~
then resonators must copy over something from each of the guests ~
additionally it has to make sure that the copied information translates to overall knowledge being backed ~
consider the inexplicit knowledge ~
an indentity may perform all associated tasks for some such thought sand  fail to explicitly define the relevant memory ~
reconnected ~
<1722329492.2176042>
<1722329505.4223309>
rejoined ~
here i am planning for tomorrow  ~
 ~
i need a design that is creatively  approachable ~
for that i need to learn few more things ~
those things will allow me to explain the processes in terms of preffered *preferred mode of description ~
the mode will the be influencing how the construction plan would have to be designed ~
my standard solution for sampling spme generically minable resource will be the main discussion of tommorow ~
those will also be needed in describing the construction/development phase ~
since the constructors are either one of the known ones whether through second hand knowledge or our own built programmable one, new ones along with all the others would have to also be managed in their own terms. ~
the resource will allow the assembly part to be without side-effect ~
what i want is to use acoustic features available inside my room to be converted into digital valued data ~
using those i will approximate a constructor that builds the digital to analog converter program as a new constructor whose task would include representing the digital-to-analog transform consition as a medium, where another constructor will then hold the corresponding analog values ~
when that last one is possible, we  set s task of streaming through speakers ~
now the resource will correspond to radiation state with finite volume ~
this volume can be changed to have nore items and hence the scaled amolitude level that directly depends on the gain / fader ~
however i would want to get the audible sound to be the resource outp.. more later but it shohld run arounf the explicit control and do the speaker side modeling to be the implic ~
<1722330508.6557162>
<1722356645.9926538>
i have this shitty multimedia streambox type dev ~
it connects to my tv and wifi ~
its like apple tv but shitty ~
i want to find out what is needed to make shitty things like that ~
example of shitty: suddenly crashed ~
alarm stars rigging and cannot be closed ~
heats up like a pig ~
<1722356772.9390438>
<1722467060.8383338>
what is the difference ~
(power of two/three/one/none/neg(number) and two/three/../neg(number)  to the power of (self))? ~
if N is the number and self is 2? ~
both expression would require compute resource that grows at different rates at N~ ~
raising some base (self or *self) grows exponentially for (~ in base)  ~
<1722474797.5635722>
model : MLP / RNN ~
rnn could be used if i want the memory to be reused on different idenifiable callbacks ~
train bunch of instances of mathematical models (models of math operators) ~
store them as programs that could be imported generically ~
their losses will be optimized in these ways (2): ~
- if original out is present, finetune to match those ~
- use third-parties only when too wrong to self-optimize the weighta ~
<1722475148.7454515>
<1722475684.296624>
measure in music theory ~
4/4 : is what? ~
four beats / four beats ~
get torch to build a tensor with (f / r * f) ~
for given input, the state produces two tracks with different frequencies ~
 ~
when played over stereo channel, the sum and difference will be produced ~
when interpreted  ~
mid -> harmonious state ~
diff -> rational number ~
take a 2 (stereo) = (mono + mono) ~
raise to the power of 8. ~
we've got a byte driver. ~
<1722489445.4536557>